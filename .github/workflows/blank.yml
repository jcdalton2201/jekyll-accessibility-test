# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # container:
    #   image:  node:10.16-jessie
    # services:
    #   jekyll:
    #     image: jcdalton2201/jekyll-ci-cd
    #     # options: --env JEKYLL_ENV=local --entrypoint="jekyll serve --watch --incremental --force_polling"
    #     ports:
    #         - 4000:4000
    #     options: "-v /home/runner/work/jekyll-test/jekyll-test:/srv/jekyll"
        # volumes: 
        #     - /home/runner/work/jekyll-test/jekyll-test:/srv/jekyll
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: update permissions
        run: |
          cd ..
          sudo chmod -R 777 .
      # NPM installs
      - name: NPM installs
        run: npm install
      # start up a jekyll server
      - name: Build the stack
        run: docker-compose up -d
      # Test and show the container running   
      - name: Show running containers
        run: docker ps -a
      #Sleep for 30s to give Jekyll a chance to spin up
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '30s'
      #Show the logs for the jekyll docker if needed  
      #- name: Show current directory
      #  run: docker logs jekyll-web-page
      #start the tests
      - name: Test is site
        run: npm run test
